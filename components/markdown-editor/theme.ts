import { createTheme } from '@uiw/codemirror-themes';
import { tags as t } from '@lezer/highlight';

export const defaultTheme = createTheme({
  theme: 'light',
  settings: {
    background: 'var(--color-canvas-subtle)',
    foreground: 'var(--color-fg-default)',
    caret: 'var(--color-fg-default)',
    selection: 'var(--color-border-default)',
    selectionMatch: 'var(--color-border-muted)',
    lineHighlight: 'var(--color-neutral-muted)',
    gutterBackground: 'var(--color-canvas-subtle)',
    gutterForeground: 'var(--color-fg-muted)',
    gutterBorder: 'var(--color-border-muted)',
  },
  styles: [
    { tag: t.comment, color: 'var(--color-prettylights-syntax-comment)' },
    { tag: t.variableName, color: 'var(--color-prettylights-syntax-variable)' },
    { tag: [t.string, t.special(t.brace)], color: 'var(--color-prettylights-syntax-entity)' },
    { tag: t.number, color: 'var(--color-prettylights-syntax-variable)' },
    { tag: [t.bool, t.null], color: 'var(--color-prettylights-syntax-entity)' },
    { tag: t.keyword, color: 'var(--color-prettylights-syntax-keyword)', fontWeight: 'bold' },
    { tag: t.string, color: 'var(--color-prettylights-syntax-string)' },
    { tag: t.operator, color: 'var(--color-accent-emphasis)' },
    { tag: t.deleted, color: 'var(--color-prettylights-syntax-markup-deleted-bg)' },
    { tag: t.deleted, color: 'red' },
    { tag: t.className, color: 'var(--color-prettylights-syntax-variable)' },
    { tag: t.definition(t.typeName), color: 'var(--color-prettylights-syntax-entity)' },
    { tag: t.typeName, color: 'var(--color-prettylights-syntax-entity)' },
    { tag: t.list, color: 'var(--color-prettylights-syntax-markup-list)' },
    { tag: t.heading, color: 'var(--color-prettylights-syntax-markup-heading)', fontWeight: 'bold' },
    { tag: t.regexp, color: 'var(--color-prettylights-syntax-string-regexp)' },
    { tag: t.literal, color: 'var(--color-prettylights-syntax-markup-italic)' },
    {
      tag: t.link,
      color: 'var(--color-prettylights-syntax-constant-other-reference-link)',
      textDecoration: 'underline',
    },
    { tag: t.angleBracket, color: 'var(--color-fg-default)' },
    { tag: t.tagName, color: 'var(--color-prettylights-syntax-entity-tag)' },
    { tag: t.attributeName, color: 'var(--color-prettylights-syntax-constant)' },
  ],
});

export const darkTheme = createTheme({
  theme: 'dark',
  settings: {
    background: 'var(--color-canvas-subtle-dark)',
    foreground: 'var(--color-fg-default-dark)',
    caret: 'var(--color-fg-default-dark)',
    selection: 'var(--color-border-default-dark)',
    selectionMatch: 'var(--color-border-muted-dark)',
    lineHighlight: 'var(--color-neutral-muted-dark)',
    gutterBackground: 'var(--color-canvas-subtle-dark)',
    gutterForeground: 'var(--color-fg-muted-dark)',
    gutterBorder: 'var(--color-border-muted-dark)',
  },
  styles: [
    { tag: t.comment, color: 'var(--color-prettylights-syntax-comment-dark)' },
    { tag: t.variableName, color: 'var(--color-prettylights-syntax-variable-dark)' },
    { tag: [t.string, t.special(t.brace)], color: 'var(--color-prettylights-syntax-entity-dark)' },
    { tag: t.number, color: 'var(--color-prettylights-syntax-variable-dark)' },
    { tag: [t.bool, t.null], color: 'var(--color-prettylights-syntax-entity-dark)' },
    { tag: t.keyword, color: 'var(--color-prettylights-syntax-keyword-dark)', fontWeight: 'bold' },
    { tag: t.string, color: 'var(--color-prettylights-syntax-string-dark)' },
    { tag: t.operator, color: 'var(--color-accent-emphasis-dark)' },
    { tag: t.deleted, color: 'var(--color-prettylights-syntax-markup-deleted-bg-dark)' },
    { tag: t.deleted, color: 'red' },
    { tag: t.className, color: 'var(--color-prettylights-syntax-variable-dark)' },
    { tag: t.definition(t.typeName), color: 'var(--color-prettylights-syntax-entity-dark)' },
    { tag: t.typeName, color: 'var(--color-prettylights-syntax-entity-dark)' },
    { tag: t.list, color: 'var(--color-prettylights-syntax-markup-list-dark)' },
    { tag: t.heading, color: 'var(--color-prettylights-syntax-markup-heading-dark)', fontWeight: 'bold' },
    { tag: t.regexp, color: 'var(--color-prettylights-syntax-string-regexp-dark)' },
    { tag: t.literal, color: 'var(--color-prettylights-syntax-markup-italic-dark)' },
    {
      tag: t.link,
      color: 'var(--color-prettylights-syntax-constant-other-reference-link-dark)',
      textDecoration: 'underline',
    },
    { tag: t.angleBracket, color: 'var(--color-fg-default-dark)' },
    { tag: t.tagName, color: 'var(--color-prettylights-syntax-entity-tag-dark)' },
    { tag: t.attributeName, color: 'var(--color-prettylights-syntax-constant-dark)' },
  ],
});
